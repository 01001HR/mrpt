// ------------------------------------------------------------
//  Config file for the "rawlog-grabber" application
// ------------------------------------------------------------

//  Each section [XXXXX] (but [global]) setups a thread in the rawlog-grabber
//   standalone application. Each thread collects data from some
//   sensor or device, then the main thread groups and orders them before
//   streaming everything to a rawlog file.
//
//  The name of the sections will become the sensor label. The driver for
//   each sensor is actually determined by the field "driver", which must
//   match the name of some class in HWDRIVERS implementing CGenericSensor.


// =======================================================
//  Section: Global settings to the application
//   
// =======================================================
[global]
// The prefix can contain a relative or absolute path.
// The final name will be <PREFIX>_date_time.rawlog
rawlog_prefix		= ./data_kinect

// Milliseconds between thread launches
time_between_launches	= 1000

use_sensoryframes	= 0

GRABBER_PERIOD_MS	= 1000

// ** IMPORTANT **: When grabbing from a 3D camera, disable GZ compression to avoid 
// a bottleneck compressing the 3D point clouds in real-time!
rawlog_GZ_compress_level  = 0   // 0: No compress, 1: fastest (default), 9: best 

// =======================================================
//  SENSOR: Kinect
//   
// =======================================================
[KINECT]
// ** IMPORTANT **: See the note on "rawlog_GZ_compress_level" above
driver                         = CKinect
process_rate                   = 200		// Hz (max)

grab_decimation                = 4    // Grab 1 out of N only.

sensorLabel  = KINECT         // A text description
preview_window  = true        // Show a window with a preview of the grabbed data in real-time

device_number   = 0           // Device index to open (0:first Kinect, 1:second Kinect,...)

grab_image      = true        // Grab the RGB image channel? (Default=true)
grab_depth      = true        // Grab the depth channel? (Default=true)
grab_3D_points  = true        // Grab the 3D point cloud? (Default=true) If disabled, points can be generated later on.
grab_IMU        = true        // Grab the accelerometers? (Default=true)

video_channel   = VIDEO_CHANNEL_RGB // Optional. Can be: VIDEO_CHANNEL_RGB (default) or VIDEO_CHANNEL_IR

// Optional: Set the initial tilt angle of Kinect: upon initialization, the motor is sent a command to 
//            rotate to this angle (in degrees). Note: You must be aware of the tilt when interpreting the sensor readings.
initial_tilt_angle = 0

pose_x                         = 0	// Camera position on the robot (meters)
pose_y                         = 0
pose_z                         = 0
pose_yaw                       = 0	// Angles in degrees
pose_pitch                     = 0
pose_roll                      = 0

// Kinect sensor calibration:
// See http://www.mrpt.org/Kinect_and_MRPT

// Left/Depth camera
[KINECT_LEFT]
resolution = [640 488]
cx         = 339.30
cy         = 242.74
fx         = 594.21
fy         = 591.04
dist       = [0 0 0 0 0] //[K1 K2 T1 T2 K3]

// Right/RGB camera
[KINECT_RIGHT]
resolution = [640 480]
cx         = 328.94
cy         = 267.48
fx         = 529.21
fy         = 525.56
dist       = [0 0 0 0 0] //[K1 K2 T1 T2 K3]

// This default translation corresponds to a horizontal translation of 2cm
// and a change of axes. See figure in:
//http://reference.mrpt.org/svn/classmrpt_1_1slam_1_1_c_observation3_d_range_scan.html
[KINECT_LEFT2RIGHT_POSE]
pose_quaternion = [0 -0.02 0 0.5 -0.5 0.5 -0.5]  // [x y z qr qx qy qz]

